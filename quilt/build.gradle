plugins {
    id 'com.gradleup.shadow'
    id "com.modrinth.minotaur"
    id "com.matthewprenger.cursegradle"
}

repositories {
    maven { url 'https://maven.quiltmc.org/repository/release/' }
}

architectury {
    platformSetupLoomIde()
    loader('quilt')
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentQuilt.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}
repositories {
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven { url "https://maven.nucleoid.xyz/" }
}
dependencies {
    modImplementation "org.quiltmc:quilt-loader:$rootProject.quilt_loader_version"

    // Quilt Standard Libraries and QSL.
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:$rootProject.quilted_fabric_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionQuilt')
    common(project(path: ':fabric-like', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':fabric-like', configuration: 'transformProductionQuilt')

    include "de.erdbeerbaerlp:dcintegration.common:$rootProject.core_version"

    include('me.lucko:fabric-permissions-api:0.2-SNAPSHOT')
    include("eu.pb4:placeholder-api:2.4.0-pre.1+1.20.5")
}

processResources {
    inputs.property 'group', project.group
    inputs.property 'version', project.version

    filesMatching('quilt.mod.json') {
        expand group: project.group, version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
modrinth{
    if (project.hasProperty('modrinth.apikey')) { // $GRADLE_USER_HOME/gradle.properties
        token = project.getProperty("modrinth.apikey") // Use an environment property!
        projectId = 'rbJ7eS5V'
        versionNumber = "${project.mod_version}-${project.minecraft_version}"
        versionName = "DiscordIntegration-Quilt ${project.mod_version} (MC ${project.minecraft_version})"
        uploadFile = remapJar
        changelog = project.changelog
        gameVersions = ["${project.minecraft_version}"]
        loaders = ['quilt']
        dependencies {
            required.project "qsl"
        }
        versionType = project.releaseType.toUpperCase()
    }
}
curseforge {
    if (project.hasProperty('curseforge.apikey')) { // $GRADLE_USER_HOME/gradle.properties
        apiKey = getProperty("curseforge.apikey")
        project {
            id = '493679'
            changelog = project.changelog
            releaseType = project.releaseType.toLowerCase()
            addGameVersion "${project.minecraft_version}"
            mainArtifact(jar) {
                displayName = "DiscordIntegration-Quilt ${project.mod_version} (MC ${project.minecraft_version})"
            }
            relations {
                requiredDependency("qsl")
            }
        }
    }
}

tasks.release.dependsOn(tasks.build, tasks.curseforge, tasks.modrinth)